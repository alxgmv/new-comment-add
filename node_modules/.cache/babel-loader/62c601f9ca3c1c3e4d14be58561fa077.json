{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexandr\\\\Documents\\\\GitHub\\\\new-comment-add\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Component } from 'react'; // import CommentListItem from '../comment-list-item/comment-list-item'\n\nimport CommentList from '../comment-list/comment-list';\nimport AddCommentForm from '../add-comment-form/add-comment-form';\nimport './App.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      fields: [this.createComment('author: moderator', 'comment text: test message')]\n    };\n\n    this.addComment = (author_text, commentText_text) => {\n      const newComment = this.createComment(author_text, commentText_text);\n      this.setState(({\n        fields\n      }) => {\n        const newArray = [...fields, newComment];\n        return {\n          fields: newArray\n        };\n      });\n    };\n  }\n\n  createComment(author, commentText) {\n    return {\n      author,\n      commentText,\n      date: new Date().toLocaleString(),\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CommentList, {\n      fields: this.state.fields,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(AddCommentForm, {\n      onCommentAdd: this.addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Alexandr/Documents/GitHub/new-comment-add/src/components/app/App.js"],"names":["React","Component","CommentList","AddCommentForm","App","maxId","state","fields","createComment","addComment","author_text","commentText_text","newComment","setState","newArray","author","commentText","date","Date","toLocaleString","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAIA,OAAO,WAAP;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEzCI,KAFyC,GAEjC,GAFiC;AAAA,SAIzCC,KAJyC,GAIjC;AACNC,MAAAA,MAAM,EAAG,CACP,KAAKC,aAAL,CAAmB,mBAAnB,EAAwC,4BAAxC,CADO;AADH,KAJiC;;AAAA,SAmBzCC,UAnByC,GAmB5B,CAACC,WAAD,EAAcC,gBAAd,KAAmC;AAC9C,YAAMC,UAAU,GAAG,KAAKJ,aAAL,CAAmBE,WAAnB,EAAgCC,gBAAhC,CAAnB;AACA,WAAKE,QAAL,CAAc,CAAC;AAAEN,QAAAA;AAAF,OAAD,KAAgB;AAC5B,cAAMO,QAAQ,GAAG,CAAC,GAAGP,MAAJ,EAAYK,UAAZ,CAAjB;AACA,eAAO;AACLL,UAAAA,MAAM,EAAEO;AADH,SAAP;AAGD,OALD;AAMD,KA3BwC;AAAA;;AAUzCN,EAAAA,aAAa,CAAEO,MAAF,EAAUC,WAAV,EAAuB;AAClC,WAAM;AACJD,MAAAA,MADI;AAEJC,MAAAA,WAFI;AAGJC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAHF;AAIJC,MAAAA,EAAE,EAAE,KAAKf,KAAL;AAJA,KAAN;AAMD;;AAYDgB,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAKE,oBAAC,cAAD;AACE,MAAA,YAAY,EAAE,KAAKE,UADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA;AAUA;;AAxCuC","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import CommentListItem from '../comment-list-item/comment-list-item'\r\nimport CommentList from '../comment-list/comment-list'\r\nimport AddCommentForm from '../add-comment-form/add-comment-form'\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100\r\n\r\n  state = {\r\n    fields : [\r\n      this.createComment('author: moderator', 'comment text: test message')\r\n    ]\r\n  }\r\n\r\n  createComment (author, commentText) {\r\n    return{\r\n      author,\r\n      commentText,\r\n      date: new Date().toLocaleString(),\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  addComment = (author_text, commentText_text) => {\r\n    const newComment = this.createComment(author_text, commentText_text)\r\n    this.setState(({ fields }) => {\r\n      const newArray = [...fields, newComment]\r\n      return {\r\n        fields: newArray\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n\r\n      <CommentList\r\n        fields={this.state.fields}\r\n        />\r\n      <AddCommentForm\r\n        onCommentAdd={this.addComment}\r\n        />\r\n    </div>\r\n  )}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}